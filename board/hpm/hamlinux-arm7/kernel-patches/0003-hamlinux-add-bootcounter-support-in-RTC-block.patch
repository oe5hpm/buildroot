From bd6e127cc44c3408e3643aaf20bde6caa3afee29 Mon Sep 17 00:00:00 2001
From: Hannes Schmelzer <oe5hpm@oevsv.at>
Date: Wed, 21 Mar 2018 10:01:57 +0100
Subject: [PATCH 3/4] hamlinux: add bootcounter support in RTC block

Signed-off-by: Hannes Schmelzer <oe5hpm@oevsv.at>
---
 drivers/rtc/rtc-omap.c | 61 ++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 61 insertions(+)

diff --git a/drivers/rtc/rtc-omap.c b/drivers/rtc/rtc-omap.c
index 1d666ac..1336fa4 100644
--- a/drivers/rtc/rtc-omap.c
+++ b/drivers/rtc/rtc-omap.c
@@ -131,6 +131,10 @@
 #define	KICK0_VALUE			0x83e70b13
 #define	KICK1_VALUE			0x95a4f1e0
 
+/* U-Boot Bootcounter */
+#define BOOTCOUNT_MAGIC			0xB0010000
+#define BOOTCOUNT_MAGIC_MASK		0xffff0000
+
 struct omap_rtc;
 
 struct omap_rtc_device_type {
@@ -482,6 +486,49 @@ static void omap_rtc_power_off(void)
 	mdelay(2500);
 }
 
+/* helper for the sysFS */
+static int omap_rtc_show_str_bootcount(struct device *dev,
+				struct device_attribute *attr,
+				char *buf)
+{
+	u32 counter;
+	struct omap_rtc *rtc = dev_get_drvdata(dev);
+
+	counter = rtc_readl(rtc, OMAP_RTC_SCRATCH2_REG) & 0x0000ffff;
+	return sprintf(buf, "%d\n", counter);
+}
+
+static int omap_rtc_store_str_bootcount(struct device *dev,
+				struct device_attribute *attr,
+				const char *buf,
+				size_t count)
+{
+	int r;
+	u32 value;
+	u32 magic;
+
+	struct omap_rtc *rtc = dev_get_drvdata(dev);
+
+	magic = rtc_readl(rtc, OMAP_RTC_SCRATCH2_REG);
+	magic &= BOOTCOUNT_MAGIC_MASK;
+
+	if (magic != BOOTCOUNT_MAGIC)
+		return -EINVAL;
+
+	r = kstrtou32(buf, 0, &value);
+	if (r < 0)
+		return -EINVAL;
+
+	rtc->type->unlock(rtc);
+	rtc_writel(rtc, OMAP_RTC_SCRATCH2_REG, BOOTCOUNT_MAGIC | value);
+	rtc->type->lock(rtc);
+	return count;
+}
+
+static DEVICE_ATTR(bootcount, S_IWUSR | S_IRUGO,
+		    omap_rtc_show_str_bootcount,
+		    omap_rtc_store_str_bootcount);
+
 static const struct rtc_class_ops omap_rtc_ops = {
 	.read_time	= omap_rtc_read_time,
 	.set_time	= omap_rtc_set_time,
@@ -715,6 +762,7 @@ static int omap_rtc_probe(struct platform_device *pdev)
 	struct omap_rtc	*rtc;
 	struct resource	*res;
 	u8 reg, mask, new_ctrl;
+	u32 reg32;
 	const struct platform_device_id *id_entry;
 	const struct of_device_id *of_id;
 	int ret;
@@ -884,6 +932,19 @@ static int omap_rtc_probe(struct platform_device *pdev)
 	if (ret)
 		goto err;
 
+	/* implementation for u-boot bootcount */
+	reg32 = rtc_readl(rtc, OMAP_RTC_SCRATCH2_REG);
+	if ((reg32 & BOOTCOUNT_MAGIC_MASK) == BOOTCOUNT_MAGIC) {
+		dev_info(&pdev->dev, "have a u-boot bootcounter (value: %d)\n",
+			reg32 & ~BOOTCOUNT_MAGIC_MASK);
+		dev_set_drvdata((struct device *)rtc->rtc, rtc);
+		if (device_create_file((struct device *)rtc->rtc,
+					&dev_attr_bootcount)) {
+			pr_warn("%s: couldnt register sysfs entry.\n",
+				pdev->name);
+		}
+	}
+
 	return 0;
 
 err:
-- 
2.7.4

